/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DictionaryApplication;

import java.io.IOException;
import java.util.Vector;
import javax.swing.JOptionPane;
/**
 *
 * @author 20166
 */
public class DictionaryApplication extends javax.swing.JFrame {
    /**
     * Creates new form DictionaryApplication
     */
    public DictionaryApplication() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundTop = new javax.swing.JPanel();
        iconTop = new javax.swing.JLabel();
        backgroundBottom = new javax.swing.JPanel();
        iconBot = new javax.swing.JLabel();
        backgroundCenter = new javax.swing.JPanel();
        mesage2 = new javax.swing.JLabel();
        input = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        voidButton = new javax.swing.JButton();
        output = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        message1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_word_target = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        iconTop.setIcon(new javax.swing.ImageIcon("C:\\Users\\20166\\Pictures\\Saved Pictures\\image_top.png")); // NOI18N

        javax.swing.GroupLayout backgroundTopLayout = new javax.swing.GroupLayout(backgroundTop);
        backgroundTop.setLayout(backgroundTopLayout);
        backgroundTopLayout.setHorizontalGroup(
            backgroundTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backgroundTopLayout.setVerticalGroup(
            backgroundTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        iconBot.setIcon(new javax.swing.ImageIcon("C:\\Users\\20166\\Pictures\\Saved Pictures\\image_bot.png")); // NOI18N

        javax.swing.GroupLayout backgroundBottomLayout = new javax.swing.GroupLayout(backgroundBottom);
        backgroundBottom.setLayout(backgroundBottomLayout);
        backgroundBottomLayout.setHorizontalGroup(
            backgroundBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconBot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        backgroundBottomLayout.setVerticalGroup(
            backgroundBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconBot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mesage2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        mesage2.setText("Nhập từ để tìm kiếm :");

        input.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputMouseClicked(evt);
            }
        });
        input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputActionPerformed(evt);
            }
        });
        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputKeyTyped(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addButton.setText("Thêm từ");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        deleteButton.setText("Xóa");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        editButton.setText("Chỉnh sửa");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });

        voidButton.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        voidButton.setText("Phát âm");
        voidButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                voidButtonMouseClicked(evt);
            }
        });

        output.setBackground(new java.awt.Color(255, 255, 255));
        output.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        output.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Nghĩa của từ :");

        javax.swing.GroupLayout backgroundCenterLayout = new javax.swing.GroupLayout(backgroundCenter);
        backgroundCenter.setLayout(backgroundCenterLayout);
        backgroundCenterLayout.setHorizontalGroup(
            backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mesage2)
                    .addGroup(backgroundCenterLayout.createSequentialGroup()
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(voidButton))
                    .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        backgroundCenterLayout.setVerticalGroup(
            backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundCenterLayout.createSequentialGroup()
                .addComponent(mesage2)
                .addGap(4, 4, 4)
                .addGroup(backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(voidButton)
                    .addComponent(addButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundCenterLayout.createSequentialGroup()
                        .addComponent(editButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(output, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        message1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        message1.setText("Danh sách từ :");

        list_word_target.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        list_word_target.setModel(new javax.swing.AbstractListModel<String>() {
            Vector<String> strings = Dictionary.listWordTarget;
            @Override
            public int getSize() { return strings.size(); }
            public String getElementAt(int i) { return strings.get(i); }
        });
        list_word_target.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_word_targetMouseClicked(evt);
            }
        });
        list_word_target.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                list_word_targetValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list_word_target);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(backgroundBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(message1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backgroundCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(message1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backgroundBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputActionPerformed

    }//GEN-LAST:event_inputActionPerformed

    private void inputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputMouseClicked

    }//GEN-LAST:event_inputMouseClicked

    private void voidButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_voidButtonMouseClicked
        new speakVoice(list_word_target.getSelectedValue());
    }//GEN-LAST:event_voidButtonMouseClicked

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        newaddWord.setVisible(true);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
        list_word_target.removeAll();
        list_word_target.setModel(new javax.swing.AbstractListModel<String>() {
            Vector<String> strings = Dictionary.listWordTarget;
            @Override
            public int getSize() { return strings.size(); }
            public String getElementAt(int i) { return strings.get(i); }
        });
        
    }//GEN-LAST:event_addButtonMouseClicked

    private void inputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyPressed

    }//GEN-LAST:event_inputKeyPressed

    private void inputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyTyped

    }//GEN-LAST:event_inputKeyTyped

    private void list_word_targetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_word_targetMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_list_word_targetMouseClicked

    private void list_word_targetValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_list_word_targetValueChanged
        // TODO add your handling code here:
        for(int i = 0; i< Dictionary.listWord.size(); i++)
        {
            if(Dictionary.listWord.get(i).word_target.equals(list_word_target.getSelectedValue()))
            {
                output.setText(Dictionary.listWord.get(i).word_explain);
            }
        }
    }//GEN-LAST:event_list_word_targetValueChanged

    private void inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyReleased
        // TODO add your handling code here:
        Vector<String> St1 = new Vector<>();
        boolean check1 = false;
        boolean check2 = false;
        for(int i = 0; i < Dictionary.listWord.size();i++)
        {
            if((Dictionary.listWord.get(i).word_target).equals(input.getText().toLowerCase()))
            {
                St1.add(Dictionary.listWord.get(i).word_target);
                output.setText(Dictionary.listWord.get(i).word_explain);
                check1 = true;
                check2 = true;
            }
            
            if(Dictionary.listWord.get(i).word_target.length()>input.getText().length()
                    &&Dictionary.listWord.get(i).word_target.substring(0,input.getText().length()).equals(input.getText().toLowerCase()))
            {
                St1.add(Dictionary.listWord.get(i).word_target);
                if(check2==false)
                output.setText(null);
                check1 = true;
            }
            
        }
        if(check1==false)
        {
            St1.add("Không tìm thấy dữ liệu");
            output.setText(null);
        }
        list_word_target.removeAll();
        list_word_target.setModel(new javax.swing.AbstractListModel<String>() {
            Vector<String> strings1 = St1;
            @Override
            public int getSize() { return strings1.size(); }
            public String getElementAt(int i) { return strings1.get(i); }
        });
    }//GEN-LAST:event_inputKeyReleased

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        boolean removed = false;
        for(int i = 0; i < Dictionary.listWord.size(); i++ )
        {
            if(Dictionary.listWord.get(i).word_target.equals(list_word_target.getSelectedValue()))
            {
                Dictionary.listWord.remove(i);
                Dictionary.listWordTarget.remove(i);
                removed = true;
            }
            if(removed==true)
                break;
        }
        if(removed == true)
        {
        list_word_target.setModel(new javax.swing.AbstractListModel<String>() {
            Vector<String> strings2 = Dictionary.listWordTarget;
            @Override
            public int getSize() { return strings2.size(); }
            public String getElementAt(int i) { return strings2.get(i); }
        });
        JOptionPane.showMessageDialog(rootPane, "Đã xóa thành công");
        output.setText(null);
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        if(output.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Bạn chưa chọn từ cần sửa");
            System.out.println(output.getText());
        }
        else
        {
          
            editWord.target9 = list_word_target.getSelectedValue();
            editWord.explain9 = output.getText();
            neweditWord.setVisible(true);
            neweditWord.mycode();
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
        boolean dd = false;
        for(int i =0; i<Dictionary.listWord.size();i++)
        {
            if(Dictionary.listWord.get(i).word_target.equals(editWord.target9))
            {
                Dictionary.listWord.remove(i);
                dd = true;
            }
            if(dd == true)
            break;
        }
        list_word_target.removeAll();
        list_word_target.setModel(new javax.swing.AbstractListModel<String>() {
            Vector<String> strings = Dictionary.listWordTarget;
            @Override
            public int getSize() { return strings.size(); }
            public String getElementAt(int i) { return strings.get(i); }
        });
        }
    }//GEN-LAST:event_editButtonMouseClicked
     /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException {
        DictionaryManagement  dm = new DictionaryManagement();
        dm.insertFromFile();
        dm.dictionaryExportToFile();
        Dictionary d = new Dictionary();
        d.setListWlistWordTarget();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DictionaryApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            DictionaryApplication da = new DictionaryApplication();
            da.setVisible(true);
            da.setLocationRelativeTo(null);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel backgroundBottom;
    private javax.swing.JPanel backgroundCenter;
    private javax.swing.JPanel backgroundTop;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel iconBot;
    private javax.swing.JLabel iconTop;
    private javax.swing.JTextField input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list_word_target;
    private javax.swing.JLabel mesage2;
    private javax.swing.JLabel message1;
    private javax.swing.JLabel output;
    private javax.swing.JButton voidButton;
    // End of variables declaration//GEN-END:variables
    private addWord newaddWord = new addWord();
    private editWord neweditWord = new editWord();
}   
